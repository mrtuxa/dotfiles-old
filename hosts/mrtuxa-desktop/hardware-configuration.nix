# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/1b208688-7bbd-4fa3-b5b5-bd1f355f9139";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-3c29363a-c5ce-47bf-bffc-8996ef8682c6".device = "/dev/disk/by-uuid/3c29363a-c5ce-47bf-bffc-8996ef8682c6";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/3CD1-6906";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/15212879-3e92-4c3b-984d-48bfbb7cefe0"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  boot.loader.efi.efiSysMountPoint = "/boot/efi";

  # Setup keyfile
  boot.initrd.secrets = {
    "/crypto_keyfile.bin" = null;
  };

  # Enable swap on luks
  boot.initrd.luks.devices."luks-21d9df91-67c4-4613-8f4b-c719b828a084".device = "/dev/disk/by-uuid/21d9df91-67c4-4613-8f4b-c719b828a084";
  boot.initrd.luks.devices."luks-21d9df91-67c4-4613-8f4b-c719b828a084".keyFile = "/crypto_keyfile.bin";

}
